// writeoffs.js

document.addEventListener("DOMContentLoaded", async function () {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –¥–∞—Ç–µ
    flatpickr("#writeoffFilterDateRange", {
        mode: "range",
        dateFormat: "Y-m-d",
        maxDate: "today"
    });

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    function showError(message) {
        window.common.showModal("–û—à–∏–±–∫–∞", message, "error");
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ—á–µ–∫ –ø—Ä–æ–¥–∞–∂ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–°–ø–∏—Å–∞–Ω–∏—è"
    async function loadWriteoffPoints() {
        try {
            const kktList = await window.common.loadKktList();
            const filterPointSelect = document.getElementById("writeoffFilterPoint");
            filterPointSelect.innerHTML = '<option value="">–í—Å–µ —Ç–æ—á–∫–∏</option>';
            kktList.forEach(point => {
                const option = document.createElement("option");
                option.value = point.pointName;
                option.textContent = point.pointName;
                filterPointSelect.appendChild(option);
            });

            // –¢–∞–∫–∂–µ –∑–∞–ø–æ–ª–Ω—è–µ–º —Ç–æ—á–∫–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
            const modalPointSelects = document.querySelectorAll(".modal-point-select");
            modalPointSelects.forEach(select => {
                select.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É</option>';
                kktList.forEach(point => {
                    const option = document.createElement("option");
                    option.value = point.pointName;
                    option.textContent = point.pointName;
                    select.appendChild(option);
                });
            });

            console.log("–¢–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", kktList);
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ—á–µ–∫ –ø—Ä–æ–¥–∞–∂ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏–π:", error);
            showError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ—á–µ–∫ –ø—Ä–æ–¥–∞–∂: ${error.response?.data?.error || error.message}`);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–ø–∏—Å–∞–Ω–∏–π
    async function fetchAndFilterWriteoffs(applyFilters = false) {
        try {
            const response = await window.common.axiosWithRetry(() => window.common.axiosInstance.get("http://localhost:5000/api/writeoffs"));
            let writeoffs = response.data.writeoffs || [];

            if (writeoffs.length === 0) {
                return [];
            }

            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
            if (applyFilters) {
                const dateRange = document.getElementById("writeoffFilterDateRange").value;
                const pointFilter = document.getElementById("writeoffFilterPoint").value;

                // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ
                if (dateRange) {
                    const [dateFrom, dateTo] = dateRange.split(" to ");
                    if (dateFrom && dateTo) {
                        writeoffs = writeoffs.filter(writeoff => {
                            const writeoffDate = new Date(writeoff.date);
                            const from = new Date(dateFrom);
                            const to = new Date(dateTo);
                            return writeoffDate >= from && writeoffDate <= to;
                        });
                    } else if (dateFrom) {
                        writeoffs = writeoffs.filter(writeoff => {
                            const writeoffDate = new Date(writeoff.date);
                            const from = new Date(dateFrom);
                            return writeoffDate >= from;
                        });
                    }
                }

                // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–æ—á–∫–µ –ø—Ä–æ–¥–∞–∂
                if (pointFilter) {
                    writeoffs = writeoffs.filter(writeoff => writeoff.point === pointFilter);
                }
            }

            return writeoffs;
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∞–Ω–∏–π:", error);
            showError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∞–Ω–∏–π: ${error.response?.data?.error || error.message}`);
            return [];
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∞–Ω–∏–π —Å –±—ç–∫–µ–Ω–¥–∞
    async function loadWriteoffs(applyFilters = false) {
        const writeoffs = await fetchAndFilterWriteoffs(applyFilters);
        const tableBody = document.getElementById("writeoffData");
        tableBody.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º

        if (writeoffs.length === 0) {
            tableBody.innerHTML = "<tr><td colspan='5'>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–ø–∏—Å–∞–Ω–∏—è—Ö</td></tr>";
            return;
        }

        writeoffs.forEach(writeoff => {
            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${writeoff.date}</td>
                <td>${writeoff.point}</td>
                <td>${writeoff.product}</td>
                <td>${writeoff.quantity}</td>
                <td>
                    <button class="delete-writeoff bg-red-500 text-white px-2 py-1 rounded" data-id="${writeoff.id}">–£–¥–∞–ª–∏—Ç—å</button>
                </td>
            `;
            tableBody.appendChild(row);
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
        document.querySelectorAll(".delete-writeoff").forEach(button => {
            button.addEventListener("click", async function () {
                const id = parseInt(this.getAttribute("data-id"));
                await deleteWriteoff(id);
            });
        });
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∞–Ω–∏–π
    function openAddWriteoffModal() {
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        const existingModal = document.querySelector('.modal');
        if (existingModal) {
            existingModal.remove();
        }

        const modal = document.createElement('div');
        modal.className = 'modal fixed inset-0 flex items-center justify-center z-50';
        modal.innerHTML = `
            <div class="fixed inset-0 bg-black opacity-50"></div>
            <div class="relative bg-white rounded-lg shadow-lg p-6 w-[1000px]">
                <div class="flex items-center mb-4">
                    <span class="text-2xl mr-2">üìã</span>
                    <h2 class="text-xl font-semibold bg-blue-500 text-white px-4 py-2 rounded">–î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–∞–Ω–∏—è</h2>
                </div>
                <div id="writeoffItems" class="mb-4 max-h-96 overflow-y-auto">
                    <div class="writeoff-item flex items-center space-x-2 border p-2 rounded mb-2">
                        <input type="text" id="modalWriteoffDate0" class="border p-1 rounded w-8 modal-date text-sm" placeholder="–î–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è">
                        <select id="modalPointSelect0" class="border p-1 rounded w-44 modal-point-select text-sm"></select>
                        <input type="text" id="modalWriteoffProduct0" class="border p-1 rounded w-68 text-sm" placeholder="–ü—Ä–æ–¥—É–∫—Ç">
                        <input type="number" id="modalWriteoffQuantity0" class="border p-1 rounded w-28 text-sm" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ" min="0">
                        <button class="remove-item text-red-500 hover:text-red-700" style="display: none;">‚úñ</button>
                    </div>
                </div>
                <button id="addMoreItem" class="bg-green-500 text-white px-4 py-2 rounded mb-4">+ –î–æ–±–∞–≤–∏—Ç—å –µ—â—ë —Ç–æ–≤–∞—Ä</button>
                <div class="flex justify-end space-x-2">
                    <button id="saveWriteoffs" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    <button class="close-modal bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        document.querySelectorAll(".modal-date").forEach(dateInput => {
            flatpickr(dateInput, {
                mode: "single",
                dateFormat: "Y-m-d",
                defaultDate: new Date().toISOString().split('T')[0]
            });
        });

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        loadWriteoffPoints();

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const closeModal = () => modal.remove();
        modal.querySelector('.close-modal').addEventListener('click', closeModal);
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        let itemCount = 1;
        document.getElementById("addMoreItem").addEventListener("click", () => {
            const newItem = document.createElement("div");
            newItem.className = "writeoff-item flex items-center space-x-2 border p-2 rounded mb-2";
            newItem.innerHTML = `
                <input type="text" id="modalWriteoffDate${itemCount}" class="border p-1 rounded w-8 modal-date text-sm" placeholder="–î–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è">
                <select id="modalPointSelect${itemCount}" class="border p-1 rounded w-44 modal-point-select text-sm"></select>
                <input type="text" id="modalWriteoffProduct${itemCount}" class="border p-1 rounded w-68 text-sm" placeholder="–ü—Ä–æ–¥—É–∫—Ç">
                <input type="number" id="modalWriteoffQuantity${itemCount}" class="border p-1 rounded w-28 text-sm" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ" min="0">
                <button class="remove-item text-red-500 hover:text-red-700">‚úñ</button>
            `;
            document.getElementById("writeoffItems").appendChild(newItem);
            itemCount++;

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            flatpickr(`#modalWriteoffDate${itemCount - 1}`, {
                mode: "single",
                dateFormat: "Y-m-d",
                defaultDate: new Date().toISOString().split('T')[0]
            });

            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂ –¥–ª—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            loadWriteoffPoints();

            // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
            updateItemRemoval();
        });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
        function updateItemRemoval() {
            const items = document.querySelectorAll(".writeoff-item");
            const removeButtons = document.querySelectorAll(".remove-item");

            removeButtons.forEach(button => {
                button.style.display = items.length > 1 ? "block" : "none";
                // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
                const newButton = button.cloneNode(true);
                button.parentNode.replaceChild(newButton, button);
            });

            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            document.querySelectorAll(".remove-item").forEach(button => {
                button.addEventListener("click", () => {
                    button.parentElement.remove();
                    itemCount--;
                    updateItemRemoval();
                });
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∞–Ω–∏–π
        document.getElementById("saveWriteoffs").addEventListener("click", async () => {
            const items = document.querySelectorAll(".writeoff-item");
            const writeoffs = [];

            for (let i = 0; i < items.length; i++) {
                const date = document.getElementById(`modalWriteoffDate${i}`).value;
                const point = document.getElementById(`modalPointSelect${i}`).value;
                const product = document.getElementById(`modalWriteoffProduct${i}`).value.trim();
                const quantity = parseInt(document.getElementById(`modalWriteoffQuantity${i}`).value);

                // –í–∞–ª–∏–¥–∞—Ü–∏—è
                try {
                    datetime.strptime(date, "%Y-%m-%d");
                } catch (error) {
                    window.common.showModal("–û—à–∏–±–∫–∞", "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-05-08)", "error");
                    return;
                }

                if (!date || !point || !product || isNaN(quantity) || quantity <= 0) {
                    window.common.showModal("–û—à–∏–±–∫–∞", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞!", "error");
                    return;
                }

                writeoffs.push({
                    date,
                    point,
                    product,
                    quantity
                });
            }

            try {
                const response = await window.common.axiosWithRetry(() => window.common.axiosInstance.post("http://localhost:5000/api/writeoffs", writeoffs));
                await loadWriteoffs();
                window.common.showModal("–£—Å–ø–µ—Ö", response.data.message, "success");
                closeModal();
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∞–Ω–∏–π:", error);
                window.common.showModal("–û—à–∏–±–∫–∞", `–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∞–Ω–∏–π: ${error.response?.data?.error || error.message}`, "error");
            }
        });
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∞–Ω–∏—è
    async function deleteWriteoff(id) {
        try {
            await window.common.axiosWithRetry(() => window.common.axiosInstance.delete(`http://localhost:5000/api/writeoffs/${id}`));
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
            await loadWriteoffs();
            window.common.showModal("–£—Å–ø–µ—Ö", `–°–ø–∏—Å–∞–Ω–∏–µ —Å id ${id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!`, "success");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∞–Ω–∏—è:", error);
            window.common.showModal("–û—à–∏–±–∫–∞", `–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∞–Ω–∏—è: ${error.response?.data?.error || error.message}`, "error");
        }
    }

    // –≠–∫—Å–ø–æ—Ä—Ç —Å–ø–∏—Å–∞–Ω–∏–π –≤ Excel —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
    async function exportWriteoffsToExcel() {
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è
            const writeoffs = await fetchAndFilterWriteoffs(true);
            if (!writeoffs || writeoffs.length === 0) {
                window.common.showModal("–û—à–∏–±–∫–∞", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞", "error");
                return;
            }

            // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel
            const data = [
                ["–î–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è", "–¢–æ—á–∫–∞ –ø—Ä–æ–¥–∞–∂", "–¢–æ–≤–∞—Ä", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"], // –ó–∞–≥–æ–ª–æ–≤–∫–∏
                ...writeoffs.map(writeoff => [
                    writeoff.date,
                    writeoff.point,
                    writeoff.product,
                    writeoff.quantity
                ])
            ];

            // –°–æ–∑–¥–∞—ë–º —Ä–∞–±–æ—á–∏–π –ª–∏—Å—Ç
            const ws = XLSX.utils.aoa_to_sheet(data);
            // –°–æ–∑–¥–∞—ë–º —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
            const wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, "Writeoffs");
            // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª
            XLSX.writeFile(wb, "writeoffs.xlsx");
            window.common.showModal("–£—Å–ø–µ—Ö", "–°–ø–∏—Å–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ Excel!", "success");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Å–ø–∏—Å–∞–Ω–∏–π –≤ Excel:", error);
            window.common.showModal("–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Excel: " + error.message, "error");
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    try {
        await window.common.getSid();
        if (window.common.getSidValue()) {
            await loadWriteoffPoints();
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–∞–Ω–∏—è —Å –±—ç–∫–µ–Ω–¥–∞
            await loadWriteoffs();
        } else {
            showError("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å SID");
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:", error);
        showError("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: " + error.message);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const openModalButton = document.getElementById("openAddWriteoffModal");
    if (openModalButton) {
        openModalButton.addEventListener("click", () => {
            console.log("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–∞–Ω–∏–µ' —Å—Ä–∞–±–æ—Ç–∞–ª");
            openAddWriteoffModal();
        });
    } else {
        console.error("–ö–Ω–æ–ø–∫–∞ 'openAddWriteoffModal' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã"
    const applyFiltersButton = document.getElementById("applyWriteoffFilters");
    if (applyFiltersButton) {
        applyFiltersButton.addEventListener("click", async function () {
            console.log("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã' —Å—Ä–∞–±–æ—Ç–∞–ª");
            await loadWriteoffs(true);
        });
    } else {
        console.error("–ö–Ω–æ–ø–∫–∞ 'applyWriteoffFilters' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel"
    const exportButton = document.getElementById("exportWriteoffsToExcel");
    if (exportButton) {
        exportButton.addEventListener("click", async function () {
            console.log("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel' —Å—Ä–∞–±–æ—Ç–∞–ª");
            await exportWriteoffsToExcel();
        });
    } else {
        console.error("–ö–Ω–æ–ø–∫–∞ 'exportWriteoffsToExcel' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    }
});